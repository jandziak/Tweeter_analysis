{
    "collab_server" : "",
    "contents" : "# required pakacges\nlibrary(twitteR)\nlibrary(sentiment)\nlibrary(plyr)\nlibrary(ggplot2)\nlibrary(wordcloud)\nlibrary(RColorBrewer)\n\nrequestURL = \"https://api.twitter.com/oauth/request_token\"\naccessURL = \"https://api.twitter.com/oauth/access_token\"\nauthURL = \"https://api.twitter.com/oauth/authorize\"\n\nconsumerKey = \"uDRIFbDDnhQxSnBfZUVVsGTC0\"\nconsumerSecret = \"bhZ1UW9CPUEnBq7dqnQ4ChX1O1JTSgAZGNDr6Y7phVUq94CPHT\"\n\naccessToken = \"747117718944518149-eJP10l1JPpjfz8H5ezAhc4vCEwIWYgS\"\naccessSecret = \"XynbdbMIwbbaFAXehzMTvFr9F6zo2IvkfXdRjnY9OTGGS\"\n\nsetup_twitter_oauth(consumerKey,\n                    consumerSecret,\n                    accessToken,\n                    accessSecret)\n# harvest some tweets\nsome_tweets = searchTwitter(\"ISIS\", n=1500, lang=\"en\")\n\n# get the text\nsome_txt = sapply(some_tweets, function(x) x$getText())\n\n\n# remove retweet entities\nsome_txt = gsub(\"(RT|via)((?:\\\\b\\\\W*@\\\\w+)+)\", \"\", some_txt)\n# remove at people\nsome_txt = gsub(\"@\\\\w+\", \"\", some_txt)\n# remove punctuation\nsome_txt = gsub(\"[[:punct:]]\", \"\", some_txt)\n# remove numbers\nsome_txt = gsub(\"[[:digit:]]\", \"\", some_txt)\n# remove html links\nsome_txt = gsub(\"http\\\\w+\", \"\", some_txt)\n# remove unnecessary spaces\nsome_txt = gsub(\"[ \\t]{2,}\", \"\", some_txt)\nsome_txt = gsub(\"^\\\\s+|\\\\s+$\", \"\", some_txt)\n\n# define \"tolower error handling\" function \ntry.error = function(x)\n{\n  # create missing value\n  y = NA\n  # tryCatch error\n  try_error = tryCatch(tolower(x), error=function(e) e)\n  # if not an error\n  if (!inherits(try_error, \"error\"))\n    y = tolower(x)\n  # result\n  return(y)\n}\n# lower case using try.error with sapply \nsome_txt = sapply(some_txt, try.error)\n\n# remove NAs in some_txt\nsome_txt = some_txt[!is.na(some_txt)]\nnames(some_txt) = NULL\n\n# classify emotion\nclass_emo = classify_emotion(some_txt, algorithm=\"bayes\", prior=1.0)\n# get emotion best fit\nemotion = class_emo[,7]\n# substitute NA's by \"unknown\"\nemotion[is.na(emotion)] = \"unknown\"\n\n# classify polarity\nclass_pol = classify_polarity(some_txt, algorithm=\"bayes\")\n# get polarity best fit\npolarity = class_pol[,4]\n\n# data frame with results\nsent_df = data.frame(text=some_txt, emotion=emotion,\n                     polarity=polarity, stringsAsFactors=FALSE)\n\n# sort data frame\nsent_df = within(sent_df,\n                 emotion <- factor(emotion, levels=names(sort(table(emotion), \n                                                              decreasing=TRUE))))\n\n# plot distribution of emotions\nggplot(sent_df, aes(x=emotion)) +\n  geom_bar(aes(y=..count.., fill=emotion)) +\n  scale_fill_brewer(palette=\"Dark2\") +\n  labs(x=\"emotion categories\", y=\"number of tweets\") +\n  opts(title = \"Sentiment Analysis of Tweets about Starbucks\\n(classification by emotion)\",\n       plot.title = theme_text(size=12))\n\n# plot distribution of polarity\nggplot(sent_df, aes(x=polarity)) +\n  geom_bar(aes(y=..count.., fill=polarity)) +\n  scale_fill_brewer(palette=\"RdGy\") +\n  labs(x=\"polarity categories\", y=\"number of tweets\") +\n  opts(title = \"Sentiment Analysis of Tweets about Starbucks\\n(classification by polarity)\",\n       plot.title = theme_text(size=12))\n\n# separating text by emotion\nemos = levels(factor(sent_df$emotion))\nnemo = length(emos)\nemo.docs = rep(\"\", nemo)\nfor (i in 1:nemo)\n{\n  tmp = some_txt[emotion == emos[i]]\n  emo.docs[i] = paste(tmp, collapse=\" \")\n}\n\n# remove stopwords\nemo.docs = removeWords(emo.docs, stopwords(\"english\"))\n# create corpus\ncorpus = Corpus(VectorSource(emo.docs))\ntdm = TermDocumentMatrix(corpus)\ntdm = as.matrix(tdm)\ncolnames(tdm) = emos\n\n# comparison word cloud\ncomparison.cloud(tdm, colors = brewer.pal(nemo, \"Dark2\"),\n                 scale = c(3,.5), random.order = FALSE, title.size = 1.5)\n",
    "created" : 1467027668651.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1467807220",
    "id" : "4A15D051",
    "lastKnownWriteTime" : 1467028024,
    "last_content_update" : -2147483648,
    "path" : "C:/Repository/Tweeter/ISIS_emotion_mapping.R",
    "project_path" : "ISIS_emotion_mapping.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}